version: '3.8'

services:
  # Frontend React Application
  frontend:
    image: node:16-alpine
    container_name: shop-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
      - NODE_ENV=development
    command: sh -c "[ -f package.json ] && npm install && npm start || echo 'No package.json found. Skipping frontend startup.'"
    restart: unless-stopped
  
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: shop-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: auth_db,profile_db,cart_db,order_db,product_db,support_db
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # API Gateway for standardized endpoints
  api-gateway:
    image: nginx:alpine
    container_name: shop-api-gateway
    ports:
      - "8080:80"
    volumes:
      - ./nginx/consolidated_nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - auth-service
      - profile-service
      - cart-service
      - order-service
      - customer-support-service
      - product-service
      - frontend
    restart: unless-stopped
  
  # Auth Service
  auth-service:
    build: ./services/auth-service
    container_name: shop-auth-service
    ports:
      - "5002:5002"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auth_db
      - SQLITE_FALLBACK_URL=sqlite:///auth.db
      - DEBUG_MODE=false
      - JWT_SECRET_KEY=secure_jwt_key_for_auth_service
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
  
  # Profile Service
  profile-service:
    build: ./services/profile-service
    container_name: shop-profile-service
    ports:
      - "5003:5003"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/profile_db
      - SQLITE_FALLBACK_URL=sqlite:///profile.db
      - DEBUG_MODE=false
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - AUTH_SERVICE_URL=http://auth-service:5002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_started
    restart: unless-stopped
  
  # Cart Service
  cart-service:
    build: ./services/cart-service
    container_name: shop-cart-service
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@db:5432/cart_db
      - SQLITE_FALLBACK_URI=sqlite:///cart.db
      - DEBUG_MODE=false
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - AUTH_SERVICE_URL=http://auth-service:5002
      - PRODUCT_SERVICE_URL=http://product-service:5006
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
  
  # Order Service
  order-service:
    build: ./services/Orderservice
    container_name: shop-order-service
    ports:
      - "5005:5005"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/order_db
      - SQLITE_FALLBACK_URL=sqlite:///order.db
      - DEBUG_MODE=false
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - CART_SERVICE_URL=http://cart-service:5001
      - AUTH_SERVICE_URL=http://auth-service:5002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
      cart-service:
        condition: service_started
    restart: unless-stopped
  
  # Customer Support Service
  customer-support-service:
    build: ./services/Customer_support_back-end
    container_name: shop-customer-support-service
    ports:
      - "5004:5004"
    environment:
      - DATABASE_URI=postgresql://postgres:postgres@db:5432/support_db
      - SQLITE_FALLBACK_URI=sqlite:///support.db
      - DEBUG_MODE=false
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - AUTH_SERVICE_URL=http://auth-service:5002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
  
  # Product Service
  product-service:
    build: ./services/product-service
    container_name: shop-product-service
    ports:
      - "5006:5006"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/product_db
      - SQLITE_FALLBACK_URL=sqlite:///product.db
      - DEBUG_MODE=false
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
