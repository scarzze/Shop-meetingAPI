# Consolidated Nginx Configuration for Shop-meetingAPI
# This configuration provides reverse proxy access to all microservices
# with standardized endpoints, health checks, and security settings.

worker_processes auto;  # Automatically set based on number of CPU cores

events {
    worker_connections 1024;  # Maximum connections per worker
}

http {
    # Basic HTTP settings
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout  65;

    # Logging settings
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    # Define upstream servers (microservices)
    # For local development, use localhost
    upstream auth_service {
        server host.docker.internal:5002;  # Auth Service
    }

    upstream cart_service {
        server host.docker.internal:5001;  # Cart Service
    }

    upstream product_service {
        server host.docker.internal:5006;  # Product Service
    }

    upstream order_service {
        server host.docker.internal:5005;  # Order Service
    }

    upstream profile_service {
        server host.docker.internal:5003;  # Profile Service
    }

    upstream customer_support {
        server host.docker.internal:5004;  # Customer Support Service
    }

    # Main server configuration
    server {
        listen 80;
        server_name localhost;

        # Enable compression for better performance
        gzip on;
        gzip_types text/plain application/json application/javascript application/xml text/css;
        gzip_min_length 1000;

        # Increase client body size for file uploads
        client_max_body_size 10M;

        # Global CORS settings
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

        # --- Global API Health Check ---
        location /api/health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"UP","services":{"auth":"UP","cart":"UP","product":"UP","order":"UP","profile":"UP","customer_support":"UP"}}';
        }
        
        # Pre-flight OPTIONS handling - for all other API endpoints
        location ~ ^/api/.*$ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            try_files $uri @proxy;
        }

        # --- Auth Service ---
        location /api/v1/auth/ {
            proxy_pass http://auth_service/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/v1/auth/health {
            proxy_pass http://auth_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # --- Cart Service ---
        location /api/v1/carts/ {
            proxy_pass http://cart_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/v1/carts/health {
            proxy_pass http://cart_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # --- Product Service ---
        location /api/v1/products/ {
            proxy_pass http://product_service/api/products/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/v1/products/health {
            proxy_pass http://product_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # --- Order Service ---
        location /api/v1/orders/ {
            proxy_pass http://order_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/v1/orders/health {
            proxy_pass http://order_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # --- Profile Service ---
        location /api/v1/profiles/ {
            proxy_pass http://profile_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/v1/profiles/health {
            proxy_pass http://profile_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # --- Customer Support Service ---
        location /api/v1/tickets/ {
            proxy_pass http://customer_support/tickets/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for real-time chat
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        location /api/v1/tickets/health {
            proxy_pass http://customer_support/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Named location for proxy handling
        location @proxy {
            # This route will be used by try_files to proxy requests
            # The actual routing will still be handled by the specific location blocks
            return 404;
        }
        
        # Simple health check for load balancers
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }
    }
}
